#!/bin/bash

echo
echo 'Maverick - UAV Companion Computer Automation'
echo '--------------------------------------------'

# Check that we're root or mav user
if [[ $EUID -ne 0 && $USER != "mav" ]]; then
    echo "Error: This must be run as root or mav user"
    echo
    exit 1
fi

# Define usage function
usage () {
    echo "--env=[bootstrap|dev|production]          Puppet environment, currently bootstrap, dev or production"
    echo "--confirm                                 This must be set to proceed, for safety"
    echo "--self-update                             Update to latest maverick code, doesn't need --confirm"
    echo
    echo "WARNING: Maverick may make major changes to the system is it running on.  Please do not run without understanding what it does."
    echo
    exit 1
}

# Parse arguments
for i in "$@"
do
    case $i in
        --env=*)
        ENV="${i#*=}"
        shift
        ;;
        --confirm)
        CONFIRM="true"
        shift
        ;;
        --self-update)
        SELFUPDATE="true"
        shift
        ;;
    esac
done

# If self-update set, action and then exit
if [ "$SELFUPDATE" == "true" ]; then
    if [ -e /srv/maverick/software/maverick/conf/puppet.conf ]; then
        if [ $EUID -eq 0 ]; then
            su mav -c "cd /srv/maverick/software/maverick; git pull origin"
        elif [ $USER == "mav" ]; then
            cd /srv/maverick/software/maverick; git pull origin;
        fi
        echo "Maverick update completed"
        echo
    else
        echo "Error: Maverick not found in expected location: /srv/maverick/software/maverick"
        echo
    fi
    exit 0
fi

# Read environment marker if it exists
if [ -e /srv/maverick/.environment ]; then
    environment=$(cat /srv/maverick/.environment)
    if [[ $environment && "$ENV" != "" ]]; then
        echo "Environment marker set but is being ignored as --env is set"
    elif [[ "$environment" == "bootstrap" || "$environment" == "dev" || "$environment" == "production" ]]; then
        echo "Environment marker set and is being used to set maverick environment: ${environment}"
        ENV=$environment
    else
        echo "Environment marker set but not recognised"
    fi
fi

# If environment not set to dev or production, exit
if [[ "$ENV" != "dev" && "$ENV" != "production" && "$ENV" != "bootstrap" ]]; then 
    echo "Error: --env not set to a recognised environment (bootstrap, dev or production)"
    echo
    usage
fi

# If confirm not set, exit
if [ "$CONFIRM" != "true" ]; then	
    echo "Error: --confirm not set"
    echo
    usage
fi

# Check that puppet is installed
if ! hash puppet 2>/dev/null; then
    echo 'Puppet not installed, attempting to install..'
    if hash apt-get 2>/dev/null; then
        if [ $EUID -eq 0 ]; then
            DEBIAN_FRONTEND=noninteractive apt-get -y install puppet >/dev/null 2>&1
        elif [ $USER == "mav" ]; then
            sudo DEBIAN_FRONTEND=noninteractive apt-get -y install puppet >/dev/null 2>&1
        fi
        if hash puppet; then
            puppetinstalled=true
        fi
    fi
else
    puppetinstalled=true
fi
if ! $puppetinstalled; then
    echo 'Error: Puppet not installed and could not be installed'
    echo
    exit 1
fi

# If git is installed at this point, then force git to ignore any changes to localconf.json
#  in the current directory, which might contain sensitive information
if hash git 2>/dev/null; then
    if [[ $EUID -eq 0 && $SUDO_USER != "" && $SUDO_USER != "root" && -e conf/localconf.json ]]; then
        su $SUDO_USER -c "git update-index --assume-unchanged conf/localconf.json"
    fi
fi

# Kludge to address #60: Remove upstart before we run puppet as it gets upset
#  with broken upstart/init setup
ubuntu=$(/bin/grep 'DISTRIB_DESCRIPTION\="Ubuntu 15.10"' /etc/lsb-release >/dev/null 2>&1)
upstart=$(which upstart)
if [[ "$ubuntu" != "" && "$upstart" != "" ]]; then
	echo "Removing broken ubuntu upstart"
	sudo dpkg --purge unity-greeter upstart >/dev/null 2>&1
fi

# OK we're good to go!
echo "Environment: ${ENV}"
echo 'Proceeding to apply Puppet manifests - please be patient, this can take a while..'
if [ -e ./conf/puppet.conf ]; then
    if [ $EUID -eq 0 ]; then
        puppet apply --confdir=conf --environment ${ENV} manifests
    elif [ $USER == "mav" ]; then
        sudo puppet apply --confdir=conf --environment ${ENV} manifests
    fi
elif [ -e /srv/maverick/software/maverick/conf/puppet.conf ]; then
    cwd=$(pwd)
    cd /srv/maverick/software/maverick
    if [ $EUID -eq 0 ]; then
        puppet apply --confdir=conf --environment ${ENV} manifests
    elif [ $USER == "mav" ]; then
        sudo puppet apply --confdir=conf --environment ${ENV} manifests
    fi
    cd $cwd
else
    echo "Error: Maverick software not found in current directory or expected location: /srv/maverick/software/maverick"
    exit 1
fi

# If bootstrap environment, print a reboot warning
if [ $ENV == "bootstrap" ]; then
    echo
    echo "-------------------------"
    echo "WARNING: If this is the first bootstrap run, please reboot NOW to activate system changes."
    echo "If system is not rebooted after first bootstrap run, further runs may not work as expected."
    echo "-------------------------"
fi

# Finish up
echo
echo "Maverick finished, happy flying :)"
echo
